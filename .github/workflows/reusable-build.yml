name: Build Image

on:
  workflow_call:
    inputs:
      fedora_version:
        description: "The Fedora release version: 39, 40, 41 etc"
        required: true
        type: string
      fedora_edition:
        description: "The Fedora Atomic edition: Silverblue, Kinoite etc"
        required: true
        type: string
      platforms:
        description: "The platforms to build for: aarch64, x86_64 etc"
        required: true
        type: string
      tags:
        description: "The tags to apply to the image"
        required: true
        type: string

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.fedora_version }}-${{ inputs.fedora_edition }}-${{ inputs.platforms }}
  cancel-in-progress: true

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix
        id: set-matrix
        env:
          PLATFORMS: ${{ inputs.platforms }}
        run: |
          MATRIX='{"include":[]}'
          # Split platforms string by comma and iterate over each platform
          for platform in $(echo $PLATFORMS | tr ',' '\n'); do
            MATRIX=$(echo $MATRIX | jq ".include += [{\"platform\": \"${platform}\"}]")
          done

          echo "matrix=$(echo $MATRIX | jq -c  '.')" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-22.04
    needs: generate_matrix
    strategy:
      matrix: ${{fromJson(needs.generate_matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Image
        id: build-image
        env:
          FEDORA_EDITION: ${{ inputs.fedora_edition }}
          BUILD_ARGS_JSON: tojson(${{ inputs.build-args }})
        run: |
          podman build \
            --iidfile /tmp/iidfile \
            -t ${IMAGE_REGISTRY}/main-${FEDORA_EDITION}:local
            .

          IMAGE_ID=$(cat /tmp/iidfile)
          IMAGE_DIGEST=$(podman inspect --format '{{.Digest}}' $IMAGE_ID)

          echo "IMAGE_DIGEST=${IMAGE_DIGEST}" >> $GITHUB_OUTPUT

  manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create Manifest
        run: |
          podman manifest create build
